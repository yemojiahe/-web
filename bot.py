import requests
from requests.exceptions import HTTPError, RequestException

# Example Code generated by Beijing Volcanoengine Technology.



def send_message_to_bot(bot_id, user_id, message):
    url = 'https://api.coze.cn/v3/chat'
    headers = {
        'Authorization': 'Bearer pat_9y7CAU2JMfOfU5W0Pax8EpWOEc2Dvs5pwoC7s1kySl56XDAlL1W2inIpAckjLXxw',
        'Content-Type': 'application/json'
    }
    data = {
        "bot_id": bot_id,
        "user_id": user_id,
        "stream": True,
        "auto_save_history": True,
        "additional_messages": [
            {
                "role": "user",
                "content": message,
                "content_type": "text"
            }
        ]
    }

    try:
        with (requests.post(url, headers=headers, json=data, stream=True) as response):
            response.raise_for_status()  # 如果响应状态码不是 200，将抛出 HTTPError 异常

            for line in response.iter_lines():  # 使用 iter_lines 迭代响应内容
                if line:

                    json_response = line.decode('utf-8')  # 解码每行 JSON 数据
                    yield json_response  # 使用 yield 返回流式数据

    except HTTPError as http_err:
        yield f'HTTP 错误发生: {http_err}'
    except RequestException as req_err:
        yield f'请求错误发生: {req_err}'
    except Exception as err:
        yield f'其他错误发生: {err}'
